@use 'sass:map';
@use '@angular/material' as mat;

@mixin set-theme-variable($theme) {
  $color-config: mat.get-color-config($theme);
  $typography-config: mat.get-typography-config($theme);

  $background: map.get($color-config, 'background');
  $foreground: map.get($color-config, 'foreground');
  $primary: map.get($color-config, 'primary');
  $background-color-card: mat.get-color-from-palette($background, 'card');
  $scroll-width: 16px;

  #{--color-primary}: mat.get-color-from-palette($primary);
  #{--color-primary-lighter}: mat.get-color-from-palette($primary, 'lighter');
  #{--font-size-title}: mat.font-size($typography-config, 'headline-6');
  #{--disabled-text}: mat.get-color-from-palette($foreground, 'disabled-text');
  #{--calendar-divider}: mat.get-color-from-palette($foreground, 'divider');
  #{--background-color-card}: $background-color-card;
  #{--background-color-hover}: mat.get-color-from-palette($background, 'hover');
  #{--scroll-width}: $scroll-width;

  .cdk-overlay-pane {
    color: mat.get-color-from-palette($foreground, 'text');
  }

  .content {
    background-color: mat.get-color-from-palette($background, 'background');
  }

  .card {
    background-color: $background-color-card;
  }

  ::-webkit-scrollbar {
    background: transparent;
    height: 8px;
    width: $scroll-width;
  }

  $webkit-color: #dadce0;
  $webkit-hover-color: #bdc1c6;
  ::-webkit-scrollbar-thumb {
    box-shadow: none;
    background-color: $webkit-color;
    border: calc($scroll-width / 4) solid $background-color-card;
    border-radius: $scroll-width;
    min-height: 40px;
  }

  :hover::-webkit-scrollbar-thumb {
    background-color: $webkit-hover-color;
  }

  ::-webkit-resizer {
    background-color: $background-color-card;
    border-width: 7px;
    border-style: double;
    border-color: transparent $webkit-color $webkit-color transparent;
  }

  :hover::-webkit-resizer {
    border-color: transparent $webkit-hover-color $webkit-hover-color transparent;
  }
}

@mixin set-theme-typography($theme) {
  $config: mat.get-typography-config($theme);
  $body-1: mat.font-size($config, 'body-1');

  .calendar-content {
    font-size: $body-1;
  }
}

// TODO(v15): As of v15 mat.legacy-core no longer includes default typography styles.
//  The following line adds:
//    1. Default typography styles for all components
//    2. Styles for typography hierarchy classes (e.g. .mat-headline-1)
//  If you specify typography styles for the components you use elsewhere, you should delete this line.
//  If you don't need the default component typographies but still want the hierarchy styles,
//  you can delete this line and instead use:
//    `@include mat.legacy-typography-hierarchy(mat.define-typography-config());`
@include mat.all-component-typographies();
@include mat.core();

$typography-config: mat.define-typography-config(
  $font-family: 'Roboto, "Helvetica Neue", sans-serif',
);
$theme-light: mat.define-light-theme(
  (
    color: (
      primary: mat.define-palette(mat.$deep-purple-palette),
      accent: mat.define-palette(mat.$teal-palette),
    ),
    typography: $typography-config,
  )
);

@include mat.all-component-themes($theme-light);

.theme-light {
  @include set-theme-variable($theme-light);
  @include set-theme-typography($theme-light);
}

.theme-dark {
  $theme-dark: mat.define-dark-theme(
    (
      color: (
        primary: mat.define-palette(mat.$deep-purple-palette, 200),
        accent: mat.define-palette(mat.$teal-palette),
      ),
      typography: $typography-config,
    )
  );

  @include mat.all-component-colors($theme-dark);
  @include set-theme-variable($theme-dark);
  @include set-theme-typography($theme-dark);
}

form {
  display: flex;
  justify-content: center;

  .card {
    $padding: 16px;
    padding: $padding;
    width: calc(1040px - 2 * $padding);

    .card-content {
      /* TODO(mdc-migration): The following rule targets internal classes of list that may no longer apply for the MDC version.*/
      .mat-list-option {
        height: 32px;
      }
    }

    .card-footer {
      text-align: right;

      button {
        margin-left: calc($padding / 2);
      }
    }
  }

  .mat-mdc-form-field {
    width: 100%;
  }

  .mat-mdc-radio-button {
    padding: 6px 16px 6px 14px;
  }
  /* TODO(mdc-migration): The following rule targets internal classes of radio that may no longer apply for the MDC version.*/
  .mat-radio-label-content {
    padding-left: 14px;
  }
}
